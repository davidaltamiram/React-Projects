{"ast":null,"code":"var _jsxFileName = \"/Users/david7u7/Desktop/react/curso-react/props-app/src/ListaTareas.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ListaApp() {\n  _s();\n  const TareasLista = [\"Hacer un curso\", \"Aprender React\", \"Crear proyectos con react\"];\n  const [tareas, setTareas] = useState(TareasLista);\n  function Submit(evento) {\n    evento.preventDefault();\n    const nuevaTarea = evento.target.tarea.value;\n    //[...tareas] utiliza el operador spread para generar una copia del array de TareasLista y al final agrega el valor obtenido en nuevaTarea, obteniendo asi una copia del array con la ultima tarea\n    setTareas([...tareas, nuevaTarea]);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Lista de Tareas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: tareas.map((tarea, indice) => {\n        /*#__PURE__*/_jsxDEV(\"li\", {\n          children: tarea\n        }, indice, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 21\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: Submit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"tarea\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"A\\xF1adir Tarea\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n}\n_s(ListaApp, \"7HRyPJAq+xemvRy2uzYoJY3xG+0=\");\n_c = ListaApp;\nexport default ListaApp;\nvar _c;\n$RefreshReg$(_c, \"ListaApp\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ListaApp","_s","TareasLista","tareas","setTareas","Submit","evento","preventDefault","nuevaTarea","target","tarea","value","children","fileName","_jsxFileName","lineNumber","columnNumber","map","indice","onSubmit","type","name","_c","$RefreshReg$"],"sources":["/Users/david7u7/Desktop/react/curso-react/props-app/src/ListaTareas.jsx"],"sourcesContent":["import React , { useState } from 'react';\n\nfunction ListaApp() {\n    const TareasLista = [\"Hacer un curso\", \"Aprender React\", \"Crear proyectos con react\"];\n    const [tareas, setTareas] = useState(TareasLista);\n\n    function Submit(evento) {\n        evento.preventDefault();\n\n        const nuevaTarea = evento.target.tarea.value;\n        //[...tareas] utiliza el operador spread para generar una copia del array de TareasLista y al final agrega el valor obtenido en nuevaTarea, obteniendo asi una copia del array con la ultima tarea\n        setTareas([...tareas, nuevaTarea]);\n    }\n\n    return (\n        <div>\n            <h1>Lista de Tareas</h1>\n            <ul>\n                {tareas.map((tarea, indice) =>{\n                    <li key={indice}>{tarea}</li>\n                })}\n            </ul>\n            <form onSubmit={Submit}>\n                <input type=\"text\" name=\"tarea\"/>\n                <button type=\"submit\">AÃ±adir Tarea</button>\n            </form>\n        </div>\n    );\n}\n\nexport default ListaApp;"],"mappings":";;AAAA,OAAOA,KAAK,IAAKC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAChB,MAAMC,WAAW,GAAG,CAAC,gBAAgB,EAAE,gBAAgB,EAAE,2BAA2B,CAAC;EACrF,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAACK,WAAW,CAAC;EAEjD,SAASG,MAAMA,CAACC,MAAM,EAAE;IACpBA,MAAM,CAACC,cAAc,CAAC,CAAC;IAEvB,MAAMC,UAAU,GAAGF,MAAM,CAACG,MAAM,CAACC,KAAK,CAACC,KAAK;IAC5C;IACAP,SAAS,CAAC,CAAC,GAAGD,MAAM,EAAEK,UAAU,CAAC,CAAC;EACtC;EAEA,oBACIT,OAAA;IAAAa,QAAA,gBACIb,OAAA;MAAAa,QAAA,EAAI;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxBjB,OAAA;MAAAa,QAAA,EACKT,MAAM,CAACc,GAAG,CAAC,CAACP,KAAK,EAAEQ,MAAM,KAAI;QAC1B,aAAAnB,OAAA;UAAAa,QAAA,EAAkBF;QAAK,GAAdQ,MAAM;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAa,CAAC;MACjC,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC,eACLjB,OAAA;MAAMoB,QAAQ,EAAEd,MAAO;MAAAO,QAAA,gBACnBb,OAAA;QAAOqB,IAAI,EAAC,MAAM;QAACC,IAAI,EAAC;MAAO;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eACjCjB,OAAA;QAAQqB,IAAI,EAAC,QAAQ;QAAAR,QAAA,EAAC;MAAY;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEd;AAACf,EAAA,CA1BQD,QAAQ;AAAAsB,EAAA,GAARtB,QAAQ;AA4BjB,eAAeA,QAAQ;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}